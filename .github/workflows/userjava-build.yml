name: UserJavaBuild

on:
  push:
    branches: [ master ]
    paths:
      - 'apis/user-java/**'
      - '.github/workflows/userjava-build.yml'
  pull_request:
    branches: [ master ]
    paths:
      - 'apis/user-java/**'
      - '.github/workflows/userjava-build.yml'

env:
  AZURE_WEBAPP_NAME: openhackpdr15ay7userjava    # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: '.'      # set this to the path to your web app project, defaults to the repository root
  NODE_VERSION: '10.x'                # set this to the node version to use
  IMAGE_NAME: 'devopsoh/api-user-java'
  ACRURI: 'openhackpdr15ay7acr.azurecr.io'

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: apis/user-java
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: run tests
      run: mvn test

    - name: build docker image and push to ACR
      run: |
        # Login to ACR
        docker login https://${{ env.ACRURI }} -u ${{ secrets.ACR_USERNAME }} -p ${{ secrets.ACR_PASSWORD }}
        
        # Build the image
        # IMAGEID=${{ env.ACRURI }}/${{ env.IMAGE_NAME }}
        docker build ./apis/user-java --tag $ACRURI/$IMAGE_NAME:${{ github.run_number }} --build-arg build_version=${{ github.run_number }}

        # Push Image to ACR
        docker push $ACRURI/$IMAGE_NAME:${{ github.run_number }}

    - name: update ASE with new image
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AS_USERJAVA_PUBLISHPROFILE }}
        images: ${{ env.ACRURI }}/${{ env.IMAGE_NAME }}:${{ github.run_number }}  
    
    - uses: actions/github-script@0.9.0
      if: failure()
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          let body = "${{ env.build_name }} Worflow Failure \n Build Number: ${{ github.run_number }} \n Build Log: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }} \n SHA: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }}) \n";
          github.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: "${{ env.build_name }} Workflow ${{ github.run_number }} Failed! User-java build",
            body: body
          });